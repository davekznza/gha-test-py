name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * SUN'

jobs:
  lint:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - run: pip install flake8

    - run: flake8 -v --color=always .

  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: pytest -v --color=yes --code-highlight=yes

#    - name: Send Slack notification
#      if: always() # Run even if previous steps fail
#      uses: slackapi/slack-github-action@v2.1.0
#      with:
#        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
#Â        webhook-type: incoming-webhook
#        payload: |
#          text: "x"

    - name: Post a message in a channel
      uses: slackapi/slack-github-action@v2.1.0
      with:
        webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
        webhook-type: incoming-webhook
        payload: |
          text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
          blocks:
            - type: "section"
              text:
                type: "mrkdwn"
                text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"

  deploy:

    runs-on: ubuntu-latest
    needs: test # Only deploy if tests pass
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only deploy on push to main

    steps:
    - uses: actions/checkout@v4

    - name: Re-Deploy PythonAnywhere Web App
      uses: umuttopalak/pythonanywhere-deploy-action@v1.1.2
      with:
        host: 'www.pythonanywhere.com'
        username: ${{ secrets.PA_USERNAME }}
        api_token: ${{ secrets.PA_API_TOKEN }}
        domain_name: ${{ secrets.PA_DOMAIN_NAME }}
